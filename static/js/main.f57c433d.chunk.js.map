{"version":3,"sources":["components/TestLetter/TestLetter.jsx","components/Typing/Typing.jsx","components/DetailCards/DetailCards.jsx","components/TypingChallenge/TypingChallenge.jsx","components/TryAgain/TryAgain.jsx","components/Test/Test.jsx","components/Challenge/Challenge.jsx","components/Footer/Footer.jsx","assets/hero.png","components/Landing/Landing.jsx","assets/logo.png","components/Nav/Nav.jsx","components/App/App.jsx","index.js"],"names":["TestLetter","individualletterInfo","statusClass","correct","incorrect","notAttempted","status","className","testLetter","Typing","timeRemaining","timerstarted","testInfo","oninputchange","class","map","index","onChange","e","target","value","placeholder","DetailCards","cardname","cardvalue","TypingChallenge","selectedParagraph","words","characters","wpm","selectdPararaph","TryAgain","startAgain","onClick","onclick","window","open","test","Challenge","Footer","href","rel","Landing","options","strings","autoStart","loop","src","flash","alt","Nav","logo","ServiceUrl","defaultState","App","state","fetchNewParagraph","fetch","then","response","text","data","split","selectedLetter","setState","startTimer","timer","setInterval","timeSpent","parseInt","clearInterval","handleUserInput","inputValue","length","slice","isMistake","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oaAkBeA,EAfI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAGZC,EAAc,CAChBC,QAAS,sBACTC,UAAW,wBACXC,aAAc,6BALCJ,EAAXK,QAQR,OAAS,uBACAC,UAAS,sBAAoBL,GAD7B,cACiDD,EAAqBO,WADtE,QCwCEC,G,MAhDA,SAAC,GAKT,IAJHC,EAIE,EAJFA,cACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,SACAC,EACE,EADFA,cAEA,OAAS,sBACDN,UAAY,mBADX,UAEL,sBACIO,MAAQ,kBADZ,UAEA,oBACEP,UAAY,QADd,iBAEMG,GAAiB,GAAKA,EAAgB,oBAF5C,OAFA,IAKI,oBACFH,UAAY,aADV,eAC2BI,GAAgB,mBAD3C,OALJ,OAUA,sBACIJ,UAAY,sBADhB,UAEA,sBACIA,UAAY,gBADhB,UAEA,sBACIA,UAAY,0BADhB,cAEIK,EAASG,KAAI,SAACd,EAAsBe,GAAvB,OAAmC,cAC5C,EAD4C,CAE5Cf,qBAAyBA,GADNe,MAH3B,OAFA,QAFA,IAaM,sBACFT,UAAY,iBADV,UAEN,0BACSU,SACL,SAACC,GAAD,OACAL,EAAcK,EAAEC,OAAOC,QAE3Bb,UAAY,WACZc,YAAc,iBARR,OAbN,OAZK,SCIEC,G,MAZK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,OAAS,sBACDjB,UAAY,yBADX,UAEL,sBACIA,UAAY,YADhB,cACgCgB,EADhC,QAFK,IAIC,sBACFT,MAAQ,aADN,cACuBU,EADvB,QAJD,SCgDEC,G,MA9CS,SAAC,GASlB,IARHC,EAQE,EARFA,kBACAC,EAOE,EAPFA,MACAC,EAME,EANFA,WACAC,EAKE,EALFA,IACAnB,EAIE,EAJFA,cACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,SACAC,EACE,EADFA,cAEA,OAAS,sBACDN,UAAY,6BADX,UAEL,sBACIA,UAAY,oBADhB,UAGA,cACA,EADA,CACYgB,SAAW,QACvBC,UAAcG,IAGd,cACA,EADA,CACYJ,SAAW,aACvBC,UAAcI,IAVd,IAWG,cACH,EADG,CACSL,SAAW,MACvBC,UAAcK,OAMd,sBACItB,UAAY,uBADhB,UAEA,cACA,EADA,CACOK,SAAaA,EACpBF,cAAkBA,EAClBC,aAAiBA,EACjBmB,gBAAoBJ,EACpBb,cAAkBA,IAPlB,QArBK,SCyDEkB,G,MAtEE,SAAC,GAKX,IAJHJ,EAIE,EAJFA,MACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,IACAG,EACE,EADFA,WAEA,OAAS,sBAELzB,UAAY,qBAFP,UAGL,gDAGA,sBACIA,UAAY,mBADhB,UAEA,8BAEA,8CAFA,IAGuBqB,EAHvB,OAMA,8BAEA,yCAFA,IAGkBD,EAHlB,OAMA,8BAEA,yCAFA,IAGkBE,EAHlB,cApBK,IA2BC,gCAEN,wBACOI,QACH,kBAAMD,KAEVzB,UAAY,0BAJZ,wBAFM,IAMsD,wBACrD2B,QACH,WACIC,OAAOC,KAAK,iDACR,wBACA,yBAIZ7B,UAAY,2BATgD,oBAa5D,wBACO2B,QACH,kBACAC,OAAOC,KAAK,oDACR,UACA,yBAGR7B,UAAY,2BARZ,uBA9CK,SC4CE8B,G,MA/CF,SAAC,GAUP,IATHX,EASE,EATFA,kBACAC,EAQE,EARFA,MACAC,EAOE,EAPFA,WACAC,EAME,EANFA,IACAnB,EAKE,EALFA,cACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,cACAmB,EACE,EADFA,WAGA,OAAS,qBACDzB,UAAY,iBADX,SAIDG,EAAgB,EAAM,sBAElBH,UAAY,6BAFM,UAGlB,cACA,EADA,CACgBG,cAAkBA,EAClCC,aAAiBA,EACjBgB,MAAUA,EACVC,WAAeA,EACfC,IAAQA,EACRH,kBAAsBA,EACtBd,SAAaA,EACbC,cAAkBA,IAXA,OAchB,sBACEN,UAAY,sBADd,UAEF,cACA,EADA,CACSoB,MAAUA,EACnBC,WAAeA,EACfC,IAAQA,EACRG,WAAeA,IANb,WCOHM,G,MAtCG,SAAC,GAUZ,IATHZ,EASE,EATFA,kBACAC,EAQE,EARFA,MACAC,EAOE,EAPFA,WACAC,EAME,EANFA,IACAnB,EAKE,EALFA,cACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,cACAmB,EACE,EADFA,WAEA,OAAS,sBACDzB,UAAY,sBADX,UAEL,oBAEAA,UAAY,mBAFZ,oCAOA,cACA,EADA,CACKuB,gBAAoBJ,EACzBhB,cAAkBA,EAClBC,aAAiBA,EACjBgB,MAAUA,EACVC,WAAeA,EACfC,IAAQA,EACRjB,SAAaA,EACbC,cAAkBA,EAClBmB,WAAeA,SCbRO,G,MAjBA,WACX,OAAS,8BAEL,sBACIhC,UAAY,mBADhB,UAEA,mBACEiC,KAAO,UACTrB,OAAS,SACTZ,UAAY,cACZkC,IAAM,aAJN,6CAFA,WCNO,G,MAAA,IAA0B,kC,gBC4C1BC,EAvCC,WACZ,OAAS,sBACDnC,UAAY,oBADX,UAEL,sBAEAA,UAAY,eAFZ,UAGA,oBACGA,UAAY,iBADf,+BAHA,IAIyD,sBACrDA,UAAY,uBADyC,UAGzD,cACA,IADA,CACWoC,QACP,CACIC,QAAS,CAAC,QAAS,UAAW,SAC9BC,WAAW,EACXC,MAAM,KAR2C,OAJzD,OAmBA,qBACIvC,UAAY,gBADhB,SAEA,qBAEAA,UAAY,cACZwC,IAAQC,EACRC,IAAM,WA3BD,Q,OCNE,MAA0B,iCCgC1BC,G,MA5BH,WAAO,IAAD,EACd,OAAS,sBACD3C,UAAY,gBADX,UAEL,sBACIA,UAAY,WADhB,UAEA,qBACIA,UAAY,aAChBwC,IAAQI,EACRF,IAAM,SACN,mBACE1C,UAAY,kBADd,yBANA,OAUA,sBACIA,UAAY,YADhB,UAEA,sBACEiC,KAAO,UACTrB,OAAS,SACTZ,UAAY,YAHZ,qBAIO,WAJP,oBAKM,cALN,sCAFA,OAZK,SCGP6C,G,MAAa,oFACbC,EAAe,CACjB3B,kBAAmB,IACnBf,cAAc,EACdD,cALc,GAMdiB,MAAO,EACPC,WAAY,EACZC,IAAK,EACLjB,SAAU,IAwHC0C,E,4MApHXC,MAAQF,E,EAERG,kBAAoB,WAChBC,MAAML,GACDM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACH,IACMjD,EADyBiD,EAAKC,MAAM,IACF/C,KAAI,SAACgD,GACzC,MAAO,CACHvD,WAAYuD,EACZzD,OAAQ,mBAGhB,EAAK0D,SAAL,2BAAkBX,GAAlB,IAAgCzC,WAAUc,kBAAmBmC,S,EAQzEI,WAAa,WACT,EAAKD,SAAS,CAAErD,cAAc,IAC9B,IAAMuD,EAAQC,aAAY,WACtB,GAAI,EAAKZ,MAAM7C,cAAgB,EAAG,CAC9B,IAAM0D,EAtCJ,GAsC4B,EAAKb,MAAM7C,cACnCmB,EAAMuC,EAAY,EAAK,EAAKb,MAAM5B,MAAQyC,EAvC9C,GAuCuE,EACzE,EAAKJ,SAAS,CACVtD,cAAe,EAAK6C,MAAM7C,cAAgB,EAC1CmB,IAAKwC,SAASxC,UAGlByC,cAAcJ,KAEnB,M,EAGPlC,WAAa,WACT,EAAKwB,qB,EAGTe,gBAAkB,SAACC,GACV,EAAKjB,MAAM5C,cAAc,EAAKsD,aAEnC,IAAMrC,EAAa4C,EAAWC,OACxB9C,EAAQ6C,EAAWV,MAAM,KAAKW,OAC9BzD,EAAQY,EAAa,EAE3B,GAAIZ,EAAQ,EACR,EAAKgD,SAAS,CACVpD,SAAS,CAAE,CACHJ,WAAY,EAAK+C,MAAM3C,SAAS,GAAGJ,WACnCF,OAAQ,iBAFR,mBAID,EAAKiD,MAAM3C,SAAS8D,MAAM,KAEjC9C,aACAD,eAKR,GAAIX,GAAS,EAAKuC,MAAM7B,kBAAkB+C,OACtC,EAAKT,SAAS,CAAEpC,aAAYD,cADhC,CAKA,IAAMf,EAAW,EAAK2C,MAAM3C,SACtBI,IAAU,EAAKuC,MAAM7B,kBAAkB+C,OAAS,IAClD7D,EAASI,EAAQ,GAAGV,OAAS,gBAIjC,IAAMqE,EAAYH,EAAWxD,KAAWJ,EAASI,GAAOR,WAGxDI,EAASI,GAAOV,OAASqE,EAAY,UAAY,YAGjD,EAAKX,SAAS,CACVpD,WACAe,QACAC,iB,uDAjER,WACIgD,KAAKpB,sB,oBAoET,WAEI,OAAS,sBACDjD,UAAY,MADX,UAEL,cACA,EADA,IAGA,cACA,EADA,IAGA,cACA,EADA,CACUmB,kBAAsBkD,KAAKrB,MAAM7B,kBAC3CC,MAAUiD,KAAKrB,MAAM5B,MACrBC,WAAegD,KAAKrB,MAAM3B,WAC1BC,IAAQ+C,KAAKrB,MAAM1B,IACnBnB,cAAkBkE,KAAKrB,MAAM7C,cAC7BC,aAAiBiE,KAAKrB,MAAM5C,aAC5BC,SAAagE,KAAKrB,MAAM3C,SACxBC,cAAkB+D,KAAKL,gBACvBvC,WAAe4C,KAAK5C,aAGpB,cACA,EADA,W,GA7GM6C,IAAMC,WCfxBC,IAASC,OAAQ,cACb,EADa,IACHC,SAASC,eAAe,W","file":"static/js/main.f57c433d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TestLetter.css';\r\n\r\nconst TestLetter = ({ individualletterInfo }) => {\r\n    const { status } = individualletterInfo;\r\n\r\n    const statusClass = {\r\n        correct: 'test-letter-correct',\r\n        incorrect: 'test-letter-incorrect',\r\n        notAttempted: 'test-letter-not-Attempted'\r\n    }[status];\r\n\r\n    return ( <\r\n        span className = { `test-letter ${statusClass}` } > { individualletterInfo.testLetter } <\r\n        /span>\r\n    );\r\n};\r\n\r\nexport default TestLetter;","import React from 'react';\r\nimport TestLetter from '../TestLetter/TestLetter';\r\nimport './Typing.css';\r\n\r\nconst Typing = ({\r\n    timeRemaining,\r\n    timerstarted,\r\n    testInfo,\r\n    oninputchange\r\n}) => {\r\n    return ( <\r\n        div className = \"typing-container\" >\r\n        <\r\n        div class = \"timer-container\" >\r\n        <\r\n        p className = \"timer\" >\r\n        00: { timeRemaining >= 10 ? timeRemaining : '0${timeRemaining}' } <\r\n        /p> <\r\n        p className = \"timer-info\" > {!timerstarted && \"ARE YOU READY !!\" } <\r\n        /p> < /\r\n        div >\r\n\r\n        <\r\n        div className = \"text-area-container\" >\r\n        <\r\n        div className = \"textarea-left\" >\r\n        <\r\n        div className = \"textarea test-paragraph\" > {\r\n            testInfo.map((individualletterInfo, index) => ( <\r\n                TestLetter key = { index }\r\n                individualletterInfo = { individualletterInfo }\r\n                />\r\n            ))\r\n        } <\r\n        /div>  < /\r\n        div > <\r\n        div className = \"textarea-right\" >\r\n        <\r\n        textarea onChange = {\r\n            (e) =>\r\n            oninputchange(e.target.value)\r\n        }\r\n        className = \"textarea\"\r\n        placeholder = \"Start Typing\" >\r\n        <\r\n        /textarea> < /\r\n        div > <\r\n        /div> < /\r\n        div >\r\n    );\r\n};\r\n\r\nexport default Typing;","import React from 'react';\r\nimport './DetailCards.css';\r\nconst DetailCards = ({ cardname, cardvalue }) => {\r\n    return ( <\r\n        div className = \"detail-cards-container\" >\r\n        <\r\n        div className = \"card-name\" > { cardname }; <\r\n        /div> <\r\n        div class = \"card-value\" > { cardvalue }; <\r\n        /div> < /\r\n        div >\r\n    );\r\n};\r\n\r\nexport default DetailCards;","import React from 'react';\r\nimport Typing from '../Typing/Typing';\r\nimport DetailCards from \"../DetailCards/DetailCards\";\r\nimport './TypingChallenge.css';\r\n\r\nconst TypingChallenge = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerstarted,\r\n    testInfo,\r\n    oninputchange\r\n}) => {\r\n    return ( <\r\n        div className = \"typing-challenge-container\" >\r\n        <\r\n        div className = \"details-container\" >\r\n\r\n        <\r\n        DetailCards cardname = \"words\"\r\n        cardvalue = { words }\r\n        /> \r\n\r\n        <\r\n        DetailCards cardname = \"characters\"\r\n        cardvalue = { characters }\r\n        /> <\r\n        DetailCards cardname = \"wpm\"\r\n        cardvalue = { wpm }\r\n        />\r\n\r\n        <\r\n        /div>\r\n\r\n        <\r\n        div className = \"typewriter-container\" >\r\n        <\r\n        Typing testInfo = { testInfo }\r\n        timeRemaining = { timeRemaining }\r\n        timerstarted = { timerstarted }\r\n        selectdPararaph = { selectedParagraph }\r\n        oninputchange = { oninputchange }\r\n        />  < /\r\n        div > <\r\n        /div>\r\n\r\n    );\r\n};\r\n\r\nexport default TypingChallenge;","import React from 'react';\r\nimport './TryAgain.css';\r\nconst TryAgain = ({\r\n    words,\r\n    characters,\r\n    wpm,\r\n    startAgain\r\n}) => {\r\n    return ( <\r\n        div //data - aos = \"fade-up\"\r\n        className = \"TryAgain-container\" >\r\n        <\r\n        h1 > Test Results < /h1>\r\n\r\n        <\r\n        div className = \"result-container\" >\r\n        <\r\n        p >\r\n        <\r\n        b > Characters: < /b> {characters} < /\r\n        p >\r\n\r\n        <\r\n        p >\r\n        <\r\n        b > Words: < /b> {words} < /\r\n        p >\r\n\r\n        <\r\n        p >\r\n        <\r\n        b > Speed: < /b> {wpm} wpm < /\r\n        p >\r\n\r\n        <\r\n        /div> <\r\n        div >\r\n        <\r\n        button onClick = {\r\n            () => startAgain()\r\n        }\r\n        className = \"end-buttons start-again\" > Re - Try < /button> <\r\n        button onclick = {\r\n            () => {\r\n                window.open(\"https://www.facebook.com/sharer/sharer.php?TTL\",\r\n                    \"facebook-share-dialog\",\r\n                    \"width=800,height=600\"\r\n                );\r\n            }\r\n        }\r\n        className = \"end-buttons share-button\" >\r\n        Share <\r\n        /button>\r\n\r\n        <\r\n        button onclick = {\r\n            () =>\r\n            window.open(\"https://www.twitter.com/intent/tweet?text=TTL.com\",\r\n                \"Twitter\",\r\n                \"width=800,height=600\"\r\n            )\r\n        }\r\n        className = \"end-buttons tweet-button\" >\r\n        Tweet <\r\n        /button>\r\n\r\n        <\r\n        /div> < /\r\n        div >\r\n    );\r\n};\r\n\r\nexport default TryAgain;","import React from 'react';\r\nimport TypingChallenge from \"../TypingChallenge/TypingChallenge\";\r\nimport TryAgain from \"../TryAgain/TryAgain\";\r\nimport './Test.css';\r\n\r\nconst test = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerstarted,\r\n    testInfo,\r\n    oninputchange,\r\n    startAgain\r\n}) => {\r\n\r\n    return ( <\r\n        div className = \"test-container\" >\r\n\r\n        {\r\n            timeRemaining > 0 ? ( <\r\n                div //data - aos = \"fade-up\"\r\n                className = \"typing-challenge-container\" >\r\n                <\r\n                TypingChallenge timeRemaining = { timeRemaining }\r\n                timerstarted = { timerstarted }\r\n                words = { words }\r\n                characters = { characters }\r\n                wpm = { wpm }\r\n                selectedParagraph = { selectedParagraph }\r\n                testInfo = { testInfo }\r\n                oninputchange = { oninputchange }\r\n                /> < /\r\n                div >\r\n            ) : ( <\r\n                div className = \"try-again-container\" >\r\n                <\r\n                TryAgain words = { words }\r\n                characters = { characters }\r\n                wpm = { wpm }\r\n                startAgain = { startAgain }\r\n                /> < /\r\n                div >\r\n            )\r\n        }\r\n\r\n        <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default test;","import React from 'react';\r\nimport Test from '../Test/Test';\r\nimport './Challenge.css';\r\n\r\nconst Challenge = ({\r\n    selectedParagraph,\r\n    words,\r\n    characters,\r\n    wpm,\r\n    timeRemaining,\r\n    timerstarted,\r\n    testInfo,\r\n    oninputchange,\r\n    startAgain\r\n}) => {\r\n    return ( <\r\n        div className = \"Challenge-container\" >\r\n        <\r\n        h1 //data - aos = \"fade-down\"\r\n        className = \"Challenge-header\" >\r\n        Take a Speed test now!\r\n        <\r\n        /h1> \r\n\r\n        <\r\n        Test selectdPararaph = { selectedParagraph }\r\n        timeRemaining = { timeRemaining }\r\n        timerstarted = { timerstarted }\r\n        words = { words }\r\n        characters = { characters }\r\n        wpm = { wpm }\r\n        testInfo = { testInfo }\r\n        oninputchange = { oninputchange }\r\n        startAgain = { startAgain }\r\n        />\r\n\r\n        <\r\n        /div>\r\n    )\r\n\r\n}\r\n\r\nexport default Challenge;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return ( <\r\n        div >\r\n        <\r\n        div className = 'footer-container' >\r\n        <\r\n        a href = \"xyz.com\"\r\n        target = \"_blank\"\r\n        className = \"footer-link\"\r\n        rel = \"noreferrer\" >\r\n        Welcome to World of Tacklestar < /a> < /\r\n        div >\r\n        <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/hero.96e141d3.png\";","import React from 'react';\r\nimport './Landing.css';\r\nimport flash from './../../assets/hero.png';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nconst Landing = () => {\r\n    return ( <\r\n        div className = \"Landing-container\" >\r\n        <\r\n        div //data - aos: \"fade-right\"\r\n        className = \"Landing-left\" >\r\n        <\r\n        h1 className = \"Landing-header\" > Can you type... < /h1> <\r\n        div className = \"typewriter-container\" >\r\n\r\n        <\r\n        Typewriter options = {\r\n            {\r\n                strings: ['Fast?', 'Correct', 'Quick'],\r\n                autoStart: true,\r\n                loop: true,\r\n            }\r\n        }\r\n        /> < /\r\n        div > <\r\n        /div>\r\n\r\n        <\r\n        div className = \"Landing-right\" >\r\n        <\r\n        img //data - aos = \"fade-left\"\r\n        className = \"flash-image\"\r\n        src = { flash }\r\n        alt = \"hero\" /\r\n        >\r\n\r\n        <\r\n        /div> < /\r\n        div >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Landing;","export default __webpack_public_path__ + \"static/media/logo.904ac8fd.png\";","import React from 'react';\r\nimport logo from './../../assets/logo.png';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n    return ( <\r\n        div className = \"nav-container\" >\r\n        <\r\n        div className = \"nav-left\" >\r\n        <\r\n        img className = 'flash-logo'\r\n        src = { logo }\r\n        alt = \"logo\" / >\r\n        <\r\n        p className = \"flash-logo-text\" > FlashType < /p> < /\r\n        div >\r\n\r\n        <\r\n        div className = \"nav-right\" >\r\n        <\r\n        a href = \"xyz.com\"\r\n        target = '_blank'\r\n        className = \"nav-link\"\r\n        href = \"xyz.com\"\r\n        rel = \"noreferrer\" >\r\n        Link <\r\n        /a> < /\r\n        div > <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Challenge from '../Challenge/Challenge';\r\nimport Footer from '../Footer/Footer';\r\nimport Landing from '../Landing/Landing';\r\nimport Nav from '../Nav/Nav';\r\nimport './App.css';\r\n\r\nconst TotalTime = 60;\r\nconst ServiceUrl = \"https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1&format=text\";\r\nconst defaultState = {\r\n    selectedParagraph: \" \",\r\n    timerstarted: false,\r\n    timeRemaining: TotalTime,\r\n    words: 0,\r\n    characters: 0,\r\n    wpm: 0,\r\n    testInfo: []\r\n}\r\n\r\nclass App extends React.Component {\r\n    state = defaultState;\r\n\r\n    fetchNewParagraph = () => {\r\n        fetch(ServiceUrl)\r\n            .then(response => response.text())\r\n            .then((data) => {\r\n                const selectedParagrapharray = data.split(\"\");\r\n                const testInfo = selectedParagrapharray.map((selectedLetter) => {\r\n                    return {\r\n                        testLetter: selectedLetter,\r\n                        status: \"notAttempted\"\r\n                    };\r\n                });\r\n                this.setState({...defaultState, testInfo, selectedParagraph: data });\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchNewParagraph();\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({ timerstarted: true });\r\n        const timer = setInterval(() => {\r\n            if (this.state.timeRemaining > 0) {\r\n                const timeSpent = TotalTime - this.state.timeRemaining;\r\n                const wpm = timeSpent > 0 ? (this.state.words / timeSpent) * TotalTime : 0;\r\n                this.setState({\r\n                    timeRemaining: this.state.timeRemaining - 1,\r\n                    wpm: parseInt(wpm)\r\n                });\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    startAgain = () => {\r\n        this.fetchNewParagraph();\r\n    }\r\n\r\n    handleUserInput = (inputValue) => {\r\n        if (!this.state.timerstarted) this.startTimer();\r\n\r\n        const characters = inputValue.length;\r\n        const words = inputValue.split(\" \").length;\r\n        const index = characters - 1;\r\n\r\n        if (index < 0) {\r\n            this.setState({\r\n                testInfo: [{\r\n                        testLetter: this.state.testInfo[0].testLetter,\r\n                        status: \"notAttempted\"\r\n                    },\r\n                    ...this.state.testInfo.slice(1)\r\n                ],\r\n                characters,\r\n                words,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (index >= this.state.selectedParagraph.length) {\r\n            this.setState({ characters, words });\r\n            return;\r\n        }\r\n\r\n        const testInfo = this.state.testInfo;\r\n        if (!(index === this.state.selectedParagraph.length - 1)) {\r\n            testInfo[index + 1].status = \"notAttempted\";\r\n        }\r\n\r\n        // Check for correct typed\r\n        const isMistake = inputValue[index] === testInfo[index].testLetter;\r\n\r\n        // updating testInfo\r\n        testInfo[index].status = isMistake ? \"correct\" : \"incorrect\";\r\n\r\n        // updating the state\r\n        this.setState({\r\n            testInfo,\r\n            words,\r\n            characters\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return ( <\r\n            div className = \"app\" >\r\n            <\r\n            Nav / >\r\n\r\n            <\r\n            Landing / >\r\n\r\n            <\r\n            Challenge selectedParagraph = { this.state.selectedParagraph }\r\n            words = { this.state.words }\r\n            characters = { this.state.characters }\r\n            wpm = { this.state.wpm }\r\n            timeRemaining = { this.state.timeRemaining }\r\n            timerstarted = { this.state.timerstarted }\r\n            testInfo = { this.state.testInfo }\r\n            oninputchange = { this.handleUserInput }\r\n            startAgain = { this.startAgain }\r\n            />\r\n\r\n            <\r\n            Footer / >\r\n            <\r\n            /div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render( <\r\n    App / > , document.getElementById('root'));"],"sourceRoot":""}